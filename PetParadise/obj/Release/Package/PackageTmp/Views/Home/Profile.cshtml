@using PetParadise.Models
@{
    PetProfile pet = ViewData["profile"] as PetProfile;

}
<div class="w-100 d-flex flex-column justify-content-start align-items-start px-4 gap-5">
    
    <div class="w-100 d-flex flex-column justify-content-end align-items-start shadow p-4 rounded-3">
        <div class="d-flex flex-row justify-content-center align-items-center gap-2">
            <img id="profile-photo" class="rounded-circle" alt="user" src="https://ui-avatars.com/api/?background=random&bold=true&name=@pet.Name" />
            <div class="d-flex flex-column justify-content-start align-items-start lh-1">
                <h3 class="fw-bold">@pet.Name</h3>
               <div class="d-flex flex-row gap-2">
                   <p id="followers-holder" class="fw-bold">@pet.Followers Followers</p>
                   <span>|</span>
                   <p class="fw-bold">@pet.Following Following</p>
               </div>

                @if (!ViewBag.IsUser)
                {
                    if (ViewBag.Following == "both")
                    {
                        <button id="follow-btn" class="btn btn-success">You follow each other <i class="fa-solid fa-check-double"></i></button>
                    }
                    else if (ViewBag.Following == "user")
                    {
                        <button id="follow-btn" class="btn btn-success">Following <i class="fa-solid fa-check"></i></button>
                    }
                    else
                    {
                        <button id="follow-btn" class="btn btn-secondary">Follow <i class="fa-solid fa-plus"></i></button>
                    }
                }
                @if (ViewBag.IsUser)
                {
                    <a class="stext-darker" href="#">Edit Profile</a>
                }
            </div>
        </div>
    </div>

    <div class="w-100 d-flex flex-row justify-content-center align-items-start gap-5">

        <div class="w-25 d-flex flex-column justify-content-center align-items-center p-4 shadow">
            @*  pet color *@
            <div class="w-100 p-2">
                <h6 class="fw-bold">Color</h6>
                <p>@pet.Color</p>
            </div>

            @*  pet category *@
            <div class="w-100 p-2">
                <h6 class="fw-bold">Category</h6>
                <p>@pet.Category</p>
            </div>

            @*  pet breed *@
            <div class="w-100 p-2">
                <h6 class="fw-bold">Breed</h6>
                <p>@pet.Breed</p>
            </div>
        </div>

        <div class="w-100 d-flex flex-column justify-content-start align-items-start rounded-3">

            @if (ViewBag.IsUser)
                    {
                @* add post *@
                <div class="p-2">
                    <h3 class="fw-bold">Post</h3>
                </div>

                <div onclick="PostBox.openPostBox()" class="w-75 shadow p-4 d-flex flex-row align-items-center gap-2">
                    <img id="profile-photo" class="rounded-circle" alt="user" src="https://ui-avatars.com/api/?background=random&bold=true&name=@pet.Name" style="height:48px;width:48px;" />
                    <div class="d-flex flex-column justify-content-start align-items-center" role="button">
                        <div class="rounded-pill border border-dark px-4 py-2 user-select-none">Bark, meow, or hiss your thoughts!</div>
                    </div>
                </div>
            }

            <div class="p-2">
                @if (ViewBag.IsUser)
                {
                    <h3 class="fw-bold">My Feeds</h3>
                }
                else
                {
                    <h3 class="fw-bold">Feeds</h3>
                }
            </div>

            <div id="post-container" class="w-100 d-flex flex-column justify-content-start align-items-start">
                @* auto generate posts *@
            </div>

        </div>
    </div>
</div>


<div id="newPostBox" class="d-none position-absolute h-100 w-100 bg-dark bg-opacity-50 start-50 top-50 translate-middle">
    <div class="w-50 position-absolute d-flex flex-column justify-content-center align-items-center start-50 top-50 translate-middle sbg-light shadow p-4 stext-darker">
        <div class="w-100 d-flex flex-column justify-content-center align-items-center">
            <h5 class="fw-bold">Create Post</h5>

            <div onclick="PostBox.closePostBox()" class="position-absolute top-0 end-0 p-2 fs-4" role="button">
                <i class="fa-solid fa-circle-xmark"></i>
            </div>

            <form id="postForm" class="w-100 d-flex flex-column justify-content-center align-items-start gap-2">
                <div class="d-flex flex-row align-items-center gap-2">
                    <img id="profile-photo" class="rounded-circle" alt="user" src="https://ui-avatars.com/api/?background=random&bold=true&name=@pet.Name" style="height:48px;width:48px;" />
                    <h5 class="fw-bold">@pet.Name</h5>
                </div>
                <div class="w-100">
                    <textarea id="postContent" rows="5" cols="10" class="w-100 sbg-lighter p-4 border-1 border-dark fs-5" placeholder="Bark, meow or hiss your thoughts, @pet.Name!"></textarea>
                </div>
                <div class="w-100 d-flex flex-column">
                    <button type="submit" class="flex-grow-1 btn btn-outline-light border-0 sbg-darker">Post</button>
                </div>
            </form>
        </div>
    </div>
</div>


<script>

     function giveTreat(e) {
                    let postId = e.target.getAttribute("data-postid");
                    let likesHolder = document.querySelector(`#like-${postId} > span`).firstChild;
        let btn = $("#like-" + postId);

                    let liked = btn.attr("data-postliked");
                    let likesCount = btn.attr("data-likescount");
                    if (liked == "true") {
                        btn.addClass("sbg-light").removeClass("sbg-base");
                        btn.attr("data-postliked", "false");
                        btn.attr("data-likescount", --likesCount);
                        likesHolder.textContent = likesCount+" ";
                    }
                    else {
                        btn.addClass("sbg-base").removeClass("sbg-light");
                        btn.attr("data-postliked", "true");
                        btn.attr("data-likescount", ++likesCount);
                        likesHolder.textContent = likesCount+" ";
                    }

                    fetch(`/post/like?id=${postId}&petid=@pet.Id`, {
                        method: "POST",
            headers: {
                            "Content-Type": "application/json",
                "Authorization": "Bearer " + getSessionToken()
            }
                    })
        .catch(e=>console.log(e))
    }

    function addPost(data) {
        const post = PostBox.postBoxTemplate(data.ProfileId, data.Id, "@pet.Name", data.PostContent, prettyDate(data.PostCreationDate), 0, 0, false);
        $("#post-container").prepend(post);
        $("#like-" + data.Id).click(giveTreat);
        PostBox.closePostBox();
    }

    function seeFullPost(e) {
        const postId = e.target.getAttribute("data-postid");
        window.location.href = `/post/${postId}?petid=@ViewBag.PetId`;
    }

    $(document).ready(() => {

        $("#follow-btn").click(toggleFollow);

        $("#postForm").submit(e=> {
            PostBox.addPost(e, addPost);
        })


        const petId = window.location.pathname.split("/")[2];

        const url = `/posts/${petId}`;

        fetch(url)
        .then(res => res.json())
        .then(data => {
            if (data.length == 0)
                $("#post-container").append("<p>Nothing to show</p>")

            else
                data.forEach(post=> {
                    PostBox.createPostBox(post.ProfileId, post.Id, post.Name, post.Content, post.CreatedAt, post.LikesCount, post.CommentsCount, post.Liked);
                });
        });
    })

    function toggleFollowButton() {
        const btn = $("#follow-btn");
        let follower = $("#followers-holder").text().split(" ")[0];
        // if followed
        if (btn.attr("class").split(/\s+/).includes("btn-success")) {
            btn.addClass("btn-secondary").removeClass("btn-success");
            btn.html(`Follow <i class="fa-solid fa-plus"></i>`);
            $("#followers-holder").html(--follower + " Followers")
        }
        else {
            btn.addClass("btn-success").removeClass("btn-secondary");
            btn.html(`Following <i class="fa-solid fa-check"></i>`);
            $("#followers-holder").html( ++follower + " Followers")

        }
    }

    function toggleFollow(e) {
        const url = `/follow?followingId=@pet.Id&followerId=@ViewBag.PetId&type=pet`;

        fetch(url, {
            method: "POST",
            headers: {
                "Content-Type": "application/json",
                "Authorization": "Bearer " + getSessionToken()
            }
        })
        .then(res=> {
            console.log(res)
            if (res.status == 200) {
                toggleFollowButton();

            }
        })
    }

</script>